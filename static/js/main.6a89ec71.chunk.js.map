{"version":3,"sources":["components/AnswersList.jsx","components/Create.jsx","components/Vote.jsx","components/Results.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["AnswersList","props","listAnswers","answers","map","item","className","key","type","id","value","onChange","e","setUpdate","target","icon","onClick","deleteAnswer","duration","easing","library","add","faTimes","Create","state","currentAnswer","handleInput","bind","addAnswer","this","setState","Date","now","preventDefault","newAnswer","console","log","newAnswers","filteredAnswers","filter","placeholder","handleChange","onSubmit","aria-label","aria-describedby","React","Component","Vote","Results","Footer","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a89ec71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/AnswersList.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FlipMove from \"react-flip-move\";\n\nfunction AnswersList(props) {\n  const answers = props.answers;\n  const listAnswers = answers.map((item) => {\n    return (\n      <div\n        className=\"list d-flex justify-content-between align-items-center bg-info text-white border border-light rounded mb-2\"\n        key={item.key}\n      >\n        <p className=\"pl-3 mb-1 d-flex justify-content-between align-items-center\">\n          <input\n            className=\"bg-transparent border-0\"\n            type=\"text\"\n            id={item.key}\n            value={item.value}\n            onChange={(e) => {\n              props.setUpdate(e.target.value, item.key);\n            }}\n          ></input>\n        </p>\n        <span className=\"pr-2\">\n          <FontAwesomeIcon\n            className=\"faicons\"\n            icon=\"times\"\n            onClick={() => props.deleteAnswer(item.key)}\n          />\n        </span>\n      </div>\n    );\n  });\n  return (\n    <div className=\"mt-4\">\n      <FlipMove duration={400} easing=\"ease-in-out\">\n        {listAnswers}\n      </FlipMove>\n    </div>\n  );\n}\nexport default AnswersList;\n","import React from \"react\";\nimport AnswersList from \"./AnswersList\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTimes);\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      currentAnswer: {\n        value: \"\",\n        key: \"\",\n      },\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addAnswer = this.addAnswer.bind(this);\n    this.deleteAnswer = this.deleteAnswer.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e) {\n    this.setState({\n      currentAnswer: {\n        value: e.target.value,\n        key: Date.now(),\n      },\n    });\n  }\n  addAnswer(e) {\n    e.preventDefault();\n    const newAnswer = this.state.currentAnswer;\n    console.log(newAnswer);\n    if (newAnswer.value !== \"\") {\n      const newAnswers = [...this.state.answers, newAnswer];\n      this.setState({\n        answers: newAnswers,\n        currentAnswer: {\n          value: \"\",\n          key: \"\",\n        },\n      });\n    }\n  }\n  deleteAnswer(key) {\n    const filteredAnswers = this.state.answers.filter(\n      (item) => item.key !== key\n    );\n    this.setState({\n      answers: filteredAnswers,\n    });\n  }\n  setUpdate(value, key) {\n    const answers = this.state.answers;\n    answers.map(item => {\n      if (item.key === key) {\n       item.value = value;\n      }\n    })\n    this.setState({\n        answers: answers\n    })\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>Create</h2>\n        </div>\n\n        <input\n          type=\"text\"\n          className=\"form-control mb-3 mt-5 bg-warning\"\n          value={this.state.value}\n          placeholder=\"Question\"\n          onChange={this.handleChange}\n        />\n        <AnswersList\n          answers={this.state.answers}\n          deleteAnswer={this.deleteAnswer}\n          setUpdate={this.setUpdate}\n        ></AnswersList>\n        <form onSubmit={this.addAnswer}>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control bg-light text-dark\"\n              placeholder=\"Type an answer\"\n              aria-label=\"Type an answer\"\n              aria-describedby=\"button-addon2\"\n              value={this.state.currentAnswer.value}\n              onChange={this.handleInput}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary bg-info text-white\"\n                type=\"submit\"\n                id=\"button-addon2\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Vote = () => {\n  return (\n    <div>\n      <h2>Vote</h2>\n    </div>\n  );\n};\n\nexport default Vote;\n","import React from \"react\";\n\nconst Results = () => {\n  return (\n    <div>\n      <h2>Results</h2>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className=\"p-2 bg-light text-dark fixed-bottom text-center\">\n      <h6 className=\"pt-2\">\n        Created by{\" \"} \n        <a\n          href=\"https://monikaswidzinska.netlify.app/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Monika Swidzinska\n        </a>\n      </h6>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Create from \"./components/Create\"\nimport Vote from \"./components/Vote\"\nimport Results from \"./components/Results\"\nimport Footer from \"./components/Footer\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app d-flex flex-column justify-content-between\" >\n      <div className=\"d-flex pb-3 m-5 flex-row justify-content-between\">\n        <Create />\n        <Vote />\n        <Results />\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}